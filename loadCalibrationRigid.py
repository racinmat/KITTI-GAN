# Autogenerated with SMOP 
from smop.core import *
# /opt/project/devkit/matlab/loadCalibrationRigid.m

    
@function
def loadCalibrationRigid(filename=None,*args,**kwargs):
    varargin = loadCalibrationRigid.varargin
    nargin = loadCalibrationRigid.nargin

    # open file
    fid=fopen(filename,'r')
# /opt/project/devkit/matlab/loadCalibrationRigid.m:4
    if fid < 0:
        error(cat('ERROR: Could not load: ',filename))
    
    # read calibration
    R=readVariable(fid,'R',3,3)
# /opt/project/devkit/matlab/loadCalibrationRigid.m:11
    T=readVariable(fid,'T',3,1)
# /opt/project/devkit/matlab/loadCalibrationRigid.m:12
    Tr=matlabarray(cat([R,T],[0,0,0,1]))
# /opt/project/devkit/matlab/loadCalibrationRigid.m:13
    # close file
    fclose(fid)
    ##############################################
##############################################
    
    
@function
def readVariable(fid=None,name=None,M=None,N=None,*args,**kwargs):
    varargin = readVariable.varargin
    nargin = readVariable.nargin

    # rewind
    fseek(fid,0,'bof')
    # search for variable identifier
    success=1
# /opt/project/devkit/matlab/loadCalibrationRigid.m:27
    while success > 0:

        str,success=fscanf(fid,'%s',1,nargout=2)
# /opt/project/devkit/matlab/loadCalibrationRigid.m:29
        if strcmp(str,cat(name,':')):
            break

    
    # return if variable identifier not found
    if logical_not(success):
        A=matlabarray([])
# /opt/project/devkit/matlab/loadCalibrationRigid.m:37
        return A
    
    # fill matrix
    A=zeros(M,N)
# /opt/project/devkit/matlab/loadCalibrationRigid.m:42
    for m in arange(1,M).reshape(-1):
        for n in arange(1,N).reshape(-1):
            val,success=fscanf(fid,'%f',1,nargout=2)
# /opt/project/devkit/matlab/loadCalibrationRigid.m:45
            if success:
                A[m,n]=val
# /opt/project/devkit/matlab/loadCalibrationRigid.m:47
            else:
                A=matlabarray([])
# /opt/project/devkit/matlab/loadCalibrationRigid.m:49
                return A
    