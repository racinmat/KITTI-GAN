# Autogenerated with SMOP 
from smop.core import *
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m

    
@function
def loadCalibrationCamToCam(filename=None,*args,**kwargs):
    varargin = loadCalibrationCamToCam.varargin
    nargin = loadCalibrationCamToCam.nargin

    # open file
    fid=fopen(filename,'r')
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:4
    if fid < 0:
        calib=matlabarray([])
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:7
        return calib
    
    # read corner distance
    calib.cornerdist = copy(readVariable(fid,'corner_dist',1,1))
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:12
    # read all cameras (maximum: 100)
    for cam in arange(1,100).reshape(-1):
        # read variables
        S_=readVariable(fid,cat('S_',num2str(cam - 1,'%02d')),1,2)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:18
        K_=readVariable(fid,cat('K_',num2str(cam - 1,'%02d')),3,3)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:19
        D_=readVariable(fid,cat('D_',num2str(cam - 1,'%02d')),1,5)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:20
        R_=readVariable(fid,cat('R_',num2str(cam - 1,'%02d')),3,3)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:21
        T_=readVariable(fid,cat('T_',num2str(cam - 1,'%02d')),3,1)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:22
        S_rect_=readVariable(fid,cat('S_rect_',num2str(cam - 1,'%02d')),1,2)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:23
        R_rect_=readVariable(fid,cat('R_rect_',num2str(cam - 1,'%02d')),3,3)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:24
        P_rect_=readVariable(fid,cat('P_rect_',num2str(cam - 1,'%02d')),3,4)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:25
        if isempty(S_) or isempty(K_) or isempty(D_) or isempty(R_) or isempty(T_):
            break
        # write calibration
        calib.S[cam]=S_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:33
        calib.K[cam]=K_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:34
        calib.D[cam]=D_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:35
        calib.R[cam]=R_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:36
        calib.T[cam]=T_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:37
        if logical_not(isempty(S_rect_)) and logical_not(isempty(R_rect_)) and logical_not(isempty(P_rect_)):
            calib.S_rect[cam]=S_rect_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:41
            calib.R_rect[cam]=R_rect_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:42
            calib.P_rect[cam]=P_rect_
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:43
    
    # close file
    fclose(fid)
    ##############################################
##############################################
    
    
@function
def readVariable(fid=None,name=None,M=None,N=None,*args,**kwargs):
    varargin = readVariable.varargin
    nargin = readVariable.nargin

    # rewind
    fseek(fid,0,'bof')
    # search for variable identifier
    success=1
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:59
    while success > 0:

        str,success=fscanf(fid,'%s',1,nargout=2)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:61
        if strcmp(str,cat(name,':')):
            break

    
    # return if variable identifier not found
    if logical_not(success):
        A=matlabarray([])
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:69
        return A
    
    # fill matrix
    A=zeros(M,N)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:74
    for m in arange(1,M).reshape(-1):
        for n in arange(1,N).reshape(-1):
            val,success=fscanf(fid,'%f',1,nargout=2)
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:77
            if success:
                A[m,n]=val
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:79
            else:
                A=matlabarray([])
# /opt/project/devkit/matlab/loadCalibrationCamToCam.m:81
                return A
    